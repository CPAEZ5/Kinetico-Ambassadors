# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";

export default function KineticoAmbassadorForm() {
  const [formData, setFormData] = useState({
    ambassadorName: "",
    ambassadorEmail: "",
    referralName: "",
    referralContact: "",
    referralZip: "",
    notes: "",
  });

  const [submitted, setSubmitted] = useState(false);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Here you'd normally send the data to a backend API
    console.log("Lead Submitted:", formData);
    setSubmitted(true);
  };

  return (
    <div className="min-h-screen bg-white p-6 flex flex-col items-center">
      <h1 className="text-3xl font-bold mb-2">Kinetico Ambassador Portal</h1>
      <p className="text-gray-600 mb-6 text-center max-w-xl">
        Submit a lead and earn rewards when your referral becomes a Kinetico customer. Just fill in the form below!
      </p>

      <Card className="w-full max-w-xl shadow-lg">
        <CardContent className="p-6">
          {submitted ? (
            <div className="text-center text-green-600 text-lg font-semibold">
              ðŸŽ‰ Lead submitted successfully! Thank you.
            </div>
          ) : (
            <form onSubmit={handleSubmit} className="space-y-4">
              <h2 className="text-xl font-semibold mb-2">Ambassador Info</h2>
              <Input
                name="ambassadorName"
                placeholder="Your Name"
                value={formData.ambassadorName}
                onChange={handleChange}
                required
              />
              <Input
                name="ambassadorEmail"
                type="email"
                placeholder="Your Email"
                value={formData.ambassadorEmail}
                onChange={handleChange}
                required
              />

              <h2 className="text-xl font-semibold mt-6 mb-2">Referral Info</h2>
              <Input
                name="referralName"
                placeholder="Referral's Name"
                value={formData.referralName}
                onChange={handleChange}
                required
              />
              <Input
                name="referralContact"
                placeholder="Referral's Email or Phone"
                value={formData.referralContact}
                onChange={handleChange}
                required
              />
              <Input
                name="referralZip"
                placeholder="Referral's Zip Code"
                value={formData.referralZip}
                onChange={handleChange}
                required
              />
              <Textarea
                name="notes"
                placeholder="Notes (Optional)"
                value={formData.notes}
                onChange={handleChange}
              />
              <Button type="submit" className="w-full">
                Submit Lead
              </Button>
            </form>
          )}
        </CardContent>
      </Card>

      <div className="mt-10 max-w-xl text-center">
        <h3 className="text-lg font-semibold mb-2">Compensation Details</h3>
        <p>
          <strong>$50</strong> for a verified consultation <br />
          <strong>$200</strong> when your referral becomes a Kinetico customer
        </p>
        <p className="text-sm text-gray-500 mt-4">
          Questions? Email us at <a href="mailto:ambassadors@kinetico.com" className="text-blue-600 underline">ambassadors@kinetico.com</a>
        </p>
      </div>
    </div>
  );
}
